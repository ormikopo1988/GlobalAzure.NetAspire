{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "7071450470466692106"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention, the name of the resource group for your application will use this name, prefixed with rg-"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The location used for all deployed resources"
      }
    },
    "azurePrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    }
  },
  "variables": {
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[format('rg-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "resources",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "azurePrincipalId": {
            "value": "[parameters('azurePrincipalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.54.24096",
              "templateHash": "3789435561528154517"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location used for all deployed resources"
              }
            },
            "azurePrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Id of the user or app to assign application roles"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags that will be applied to all resources"
              }
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('mi-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": true
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('law-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[format('cae-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').primarySharedKey]"
                  }
                }
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', '')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', ''))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', '')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', ''))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', ''))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', '')), parameters('azurePrincipalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
              "properties": {
                "principalId": "[parameters('azurePrincipalId')]",
                "principalType": "User",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', ''))]"
              ]
            }
          ],
          "outputs": {
            "MANAGED_IDENTITY_CLIENT_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').clientId]"
            },
            "MANAGED_IDENTITY_NAME": {
              "type": "string",
              "value": "[format('mi-{0}', variables('resourceToken'))]"
            },
            "MANAGED_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]"
            },
            "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
              "type": "string",
              "value": "[format('law-{0}', variables('resourceToken'))]"
            },
            "AZURE_LOG_ANALYTICS_WORKSPACE_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), '2023-07-01').loginServer]"
            },
            "AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken'))), '2023-05-01').defaultDomain]"
            },
            "SERVICE_BINDING_KV265DAFE5_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', '')), '2023-07-01').vaultUri]"
            },
            "SERVICE_BINDING_KV265DAFE5_NAME": {
              "type": "string",
              "value": "[replace(format('kv265dafe5-{0}', variables('resourceToken')), '-', '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aspiredemoapplicationinsights",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsName": {
            "value": "aspiredemoapplicationinsights"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_LOG_ANALYTICS_WORKSPACE_ID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.54.24096",
              "templateHash": "1013081098079874229"
            }
          },
          "parameters": {
            "appInsightsName": {
              "type": "string"
            },
            "applicationType": {
              "type": "string",
              "defaultValue": "web"
            },
            "kind": {
              "type": "string",
              "defaultValue": "web"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags that will be applied to all resources"
              }
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "condition": "[empty(parameters('logAnalyticsWorkspaceId'))]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('law-{0}-{1}', parameters('appInsightsName'), variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[format('{0}-{1}', parameters('appInsightsName'), variables('resourceToken'))]",
              "kind": "[parameters('kind')]",
              "location": "[parameters('location')]",
              "properties": {
                "Application_Type": "[parameters('applicationType')]",
                "WorkspaceResourceId": "[if(empty(parameters('logAnalyticsWorkspaceId')), resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}-{1}', parameters('appInsightsName'), variables('resourceToken'))), parameters('logAnalyticsWorkspaceId'))]"
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}-{1}', parameters('appInsightsName'), variables('resourceToken')))]"
              ]
            }
          ],
          "outputs": {
            "appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-{1}', parameters('appInsightsName'), variables('resourceToken'))), '2020-02-02-preview').ConnectionString]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aspiredemosqlserver",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "databases": {
            "value": [
              "aspiredemodb"
            ]
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_PRINCIPAL_ID.value]"
          },
          "principalName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_NAME.value]"
          },
          "serverName": {
            "value": "aspiredemosqlserver"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.54.24096",
              "templateHash": "3489173150003834427"
            }
          },
          "parameters": {
            "principalName": {
              "type": "string",
              "metadata": {
                "description": "User name"
              }
            },
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "User id"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags that will be applied to all resources"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location used for all deployed resources"
              }
            },
            "serverName": {
              "type": "string",
              "metadata": {
                "description": "The name of the sql server resource"
              }
            },
            "databases": {
              "type": "array",
              "defaultValue": []
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2022-05-01-preview",
              "name": "[format('{0}/{1}', format('{0}-{1}', parameters('serverName'), variables('resourceToken')), 'fw-sql-localdev')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('{0}-{1}', parameters('serverName'), variables('resourceToken')))]"
              ]
            },
            {
              "copy": {
                "name": "db",
                "count": "[length(parameters('databases'))]"
              },
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2022-05-01-preview",
              "name": "[format('{0}/{1}', format('{0}-{1}', parameters('serverName'), variables('resourceToken')), parameters('databases')[copyIndex()])]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('{0}-{1}', parameters('serverName'), variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2022-05-01-preview",
              "name": "[format('{0}-{1}', parameters('serverName'), variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "administrators": {
                  "administratorType": "ActiveDirectory",
                  "azureADOnlyAuthentication": true,
                  "login": "[parameters('principalName')]",
                  "principalType": "User",
                  "sid": "[parameters('principalId')]",
                  "tenantId": "[subscription().tenantId]"
                }
              }
            }
          ],
          "outputs": {
            "sqlServerFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', format('{0}-{1}', parameters('serverName'), variables('resourceToken'))), '2022-05-01-preview').fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cache",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.SERVICE_BINDING_KV265DAFE5_NAME.value]"
          },
          "redisCacheName": {
            "value": "cache"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.54.24096",
              "templateHash": "17067025917513536030"
            }
          },
          "parameters": {
            "redisCacheName": {
              "type": "string",
              "metadata": {
                "description": "Specify the name of the Azure Redis Cache to create."
              }
            },
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location of all resources"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Specify the pricing tier of the new Azure Redis Cache."
              }
            },
            "family": {
              "type": "string",
              "defaultValue": "C",
              "allowedValues": [
                "C",
                "P"
              ],
              "metadata": {
                "description": "Specify the family for the sku. C = Basic/Standard, P = Premium."
              }
            },
            "capacity": {
              "type": "int",
              "defaultValue": 1,
              "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "metadata": {
                "description": "Specify the size of the new Azure Redis Cache instance. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
              }
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'connectionString')]",
              "properties": {
                "value": "[format('{0},ssl=true,password={1}', reference(resourceId('Microsoft.Cache/redis', format('{0}-{1}', parameters('redisCacheName'), variables('resourceToken'))), '2020-06-01').hostName, listKeys(resourceId('Microsoft.Cache/redis', format('{0}-{1}', parameters('redisCacheName'), variables('resourceToken'))), '2020-06-01').primaryKey)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', format('{0}-{1}', parameters('redisCacheName'), variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Cache/redis",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-{1}', parameters('redisCacheName'), variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enableNonSslPort": false,
                "minimumTlsVersion": "1.2",
                "sku": {
                  "capacity": "[parameters('capacity')]",
                  "family": "[parameters('family')]",
                  "name": "[parameters('sku')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "MANAGED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_CLIENT_ID.value]"
    },
    "MANAGED_IDENTITY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_NAME.value]"
    },
    "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_LOG_ANALYTICS_WORKSPACE_NAME.value]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT.value]"
    },
    "AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN.value]"
    },
    "SERVICE_BINDING_KV265DAFE5_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.SERVICE_BINDING_KV265DAFE5_ENDPOINT.value]"
    },
    "ASPIREDEMOAPPLICATIONINSIGHTS_APPINSIGHTSCONNECTIONSTRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'aspiredemoapplicationinsights'), '2022-09-01').outputs.appInsightsConnectionString.value]"
    },
    "ASPIREDEMOSQLSERVER_SQLSERVERFQDN": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'aspiredemosqlserver'), '2022-09-01').outputs.sqlServerFqdn.value]"
    }
  }
}